/// <reference path="../../common.ts" />

interface EtherscanAccountBalanceMultiResponse {
  account: EthereumAddress;
  balance: Wei;
}

/**
 * {{es.accounts.item[1].name}}
 *
 * @param {EthereumAddress[]} addresses - A range or comma separated Ethereum addresses
 * {{common.params.fields}}
 * {{es.common.params.tag}}
 *
 * @example
 * =ES$ACCOUNT_BALANCEMULTI("0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B,0x71C7656EC7ab88b098defB751B7401B5f6d8976F", "*", "latest")
 *
 * @returns {string[]} account,balance
 *
 * @customfunction
 */
function ES$ACCOUNT_BALANCEMULTI(
  // XXX addresses can also be a comma-separated string
  addresses: EthereumAddress[],
  fields: FieldsOrAll<EtherscanAccountBalanceMultiResponse> = '*',
  tag?: EtherscanTag,
): SpreadsheetRow[] {
  return pickFields_({
    rows: esRequest_<EtherscanAccountBalanceMultiResponse[]>({
      caller: 'ES$ACCOUNT_BALANCEMULTI',
      action: 'balancemulti',
      module: 'account',
      params: {
        address: addresses.map(validateEthereumAddress_).join(','),
        tag,
      },
    }),
    fields,
  });
}
