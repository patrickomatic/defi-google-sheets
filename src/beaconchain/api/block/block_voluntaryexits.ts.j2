/// <reference path="../../common.ts" />

interface BeaconchainBlockVoluntaryexitsResponse {
  // TODO the docs don't really specify the type here, and it's not possible to voluntarily exit yet
}

/**
 * {{bc.paths["/api/v1/block/{slot}/voluntaryexits"]["get"].summary}}
 *
 * @param {number} slot - {{bc.paths["/api/v1/block/{slot}/voluntaryexits"]["get"].parameters[0].description}}
 * {{common.params.fields}}
 * {{common.params.offset}}
 * {{common.params.limit}}
 *
 * @example
 * =BC$BLOCK_VOLUNTARYEXITS(1234, "*", 0, 5)
 *
 * @customfunction
 */
function BC$BLOCK_VOLUNTARYEXITS(
  slot: number,
  fields: FieldsOrAll<BeaconchainBlockVoluntaryexitsResponse> = '*',
  offset?: number,
  limit?: number,
): SpreadsheetRow[] {
  return pickFields_({
    rows: bcRequest_<BeaconchainBlockVoluntaryexitsResponse[]>({
      apiPath: `block/${asNumber_(slot)}/voluntaryexits`,
      limit,
      offset,
    }),
    fields,
  });
}
